# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_KEY }}" > ./deploy.key
          sudo chmod 600 ./deploy.key
          echo "${{ secrets.SSH_HOST }}" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_HOST }}
          
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
            
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      # Runs a set of commands using the runners shell
      - name: Build
        run: pnpm run build

      - name: SCP Files
        uses: horochx/deploy-via-scp@master
        with:
          local: .vitepress/* # eg: dist/*
          remote: ${{ secrets.SSH_PATH }} # eg: /home/github-action/www
          host: ${{ secrets.HOST }} # eg: example.com
          # port: ${{ secrets.PORT }} # eg: 22
          user: ${{ secrets.USER }} # eg: github-action
          key: ${{ secrets.SSH_KEY }} #
      
      - name: EC2 restart pm2
        run: ssh -i ./deploy.key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pm2 restart vuejs.uz"
